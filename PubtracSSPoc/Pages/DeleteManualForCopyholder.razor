@page "/DeleteManualForCopyholder/{Id}"
@using PubtracSSPoc.Data
@inject ManualToCopyHolderService manualService
@inject NavigationManager NavigationManager

<h2>Delete Manual</h2>
<hr />
<h3>Are you sure want to delete this?</h3>
<form>
    <div class="row">
        <div class=" col-md-8">
            <div class="form-group">
                <label>manual Id:</label>
                <label>@obj.Id</label>
            </div>
            <div class="form-group">
                <label>Manual Number:</label>
                <label>@obj.TheManual.ManualNo</label>
            </div>
            <div class="form-group">
                <label>User:</label>
                <label>@obj.Copyholder.UserId</label>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-danger" @onclick="@DeleteTheManual" value="Delete" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public string Id { get; set; }
    PubtracSSPoc.Data.ManualToCopyHolder obj = new PubtracSSPoc.Data.ManualToCopyHolder();
    protected override async Task OnInitializedAsync()
    {
        obj = await Task.Run(() => manualService.GetManualToCopyHolderAsync(Convert.ToInt32(Id)));
    }
    protected async void DeleteTheManual()
    {
        await manualService.DeleteManualToCopyHolderAsync(obj);
        NavigationManager.NavigateTo("ListManualsForCopyholder/"+obj.Copyholder.UserId);
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("ListManualsForCopyholder/"+obj.Copyholder.UserId);
    }
}